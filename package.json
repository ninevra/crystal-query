{
  "name": "crystal-query",
  "version": "0.4.1",
  "description": "A simple query language with customizable semantics",
  "author": "ninevra",
  "license": "ISC",
  "homepage": "https://github.com/ninevra/crystal-query",
  "bugs": "https://github.com/ninevra/crystal-query/issues",
  "repository": "github:ninevra/crystal-query",
  "main": "./lib/index.js",
  "module": "./lib/index.js",
  "type": "module",
  "exports": {
    "import": "./lib/index.js"
  },
  "files": [
    "lib/**"
  ],
  "scripts": {
    "clean": "rm -rf lib/",
    "prebuild": "npm run clean",
    "build": "babel src -d lib/ --source-maps true --copy-files",
    "prepublishOnly": "npm run format:check && npm test && npm run build",
    "pretest": "npm run build",
    "test": "npm run lint && c8 ava",
    "test:debug": "ava debug --break",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:watch": "onchange 'src/**/*.js' -- prettier --write {{changed}}",
    "snaps:update": "ava --update-snapshots",
    "lint": "xo",
    "lint:fix": "xo --fix"
  },
  "dependencies": {
    "parsimmon": "^1.16.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.12.10",
    "@babel/core": "^7.12.10",
    "@babel/preset-env": "^7.12.11",
    "ava": "^5.0.1",
    "c8": "^7.4.0",
    "js-string-escape": "^1.0.1",
    "onchange": "^7.1.0",
    "prettier": "^2.2.1",
    "xo": "^0.52.4"
  },
  "ava": {
    "files": [
      "lib/**/*.test.*"
    ],
    "snapshotDir": "snapshots"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none",
    "bracketSpacing": true
  },
  "xo": {
    "prettier": true,
    "space": true,
    "rules": {
      "import/extensions": [
        "error",
        "always"
      ],
      "ava/no-ignored-test-files": "off",
      "unicorn/filename-case": "warn",
      "no-else-return": [
        "error",
        {
          "allowElseIf": true
        }
      ]
    },
    "overrides": [
      {
        "files": "**/*.cjs",
        "rules": {
          "unicorn/prefer-module": "off"
        }
      }
    ]
  }
}
